#!/usr/bin/env python3

import os, sys, re

from include.gentoomuch_common import arch_config_path, uid_config_path, read_file_lines, write_file_lines, config_path, output_path, profiles_amd64
from include.freshroot import freshroot
from include.sync import sync
from include.swap_stage import swap_stage
from include.pull_stage import pull_stage
from include.composefile import create_composefile
from include.get_active_stage import get_active_stage
from include.list_stages import list_stages
from include.list_profiles import list_profiles
from include.set_stage import set_stage
from include.set_profile import set_profile

ls_str = 'ls'
set_str = 'set'
sync_str = 'sync'
pipeline_str = 'pipeline'
freshroot_str = 'freshroot'
profile_str = 'profile'
stage_str = 'stage'

verbs = (ls_str, set_str, sync_str, pipeline_str, freshroot_str)
nouns = (profile_str, stage_str)

verb = ''
noun = ''
target = ''

arg_len = len(sys.argv)

usage = "Usage: gentoomuch "

print(sys.argv)
# Print usage messages.
def print_usage_ls():
    print(usage + ls_str + ' ' + profile_str)
    print(usage + ls_str + ' ' + stage_str)

def print_usage_set():
    print(usage + set_str + ' ' + profile_str + ' <number|name>')
    print(usage + set_str + ' ' + stage_str + ' <number|name>')

def print_usage_sandbox():
    print(usage + freshroot_str)

def print_usage_pipeline():
    print(usage + pipeline_str)

def print_usage_sync():
    print(usage + sync_str)

def print_usage():
    print_usage_sandbox()
    print_usage_pipeline()
    print_usage_sync()
    print_usage_ls()
    print_usage_set()

# Ingest arguments.
if arg_len > 1:
    verb = sys.argv[1]
if arg_len > 2:
    noun = sys.argv[2]
if arg_len == 4: 
    target = sys.argv[3]
if arg_len < 1 or arg_len > 4:
    print_usage()
    exit()

# Let's do this!
# First, we always create a fresh composefile.
arch = open(arch_config_path).read().strip()
create_composefile(output_path)
#swap_stage(arch, 'default', 'gentoomuch/builder')
# We can handle the single-verb commands.
if verb == freshroot_str: # Create a fresh root
#  swap_stage(arch, 'default', 'gentoomuch/builder')
  print('FRESHROOT')
  create_composefile(output_path)
  freshroot()
elif verb == pipeline_str: # Run your pipelined builds
  print('Running pipeline')
  # Get stage defines from buildlist and build them.
  # TODO: Implement
elif verb == sync_str: # Sync portage
  print('SYNC')
  create_composefile(output_path)
  sync()
elif verb == ls_str: # Listing things...
  print('LS')
  print(noun)
  if noun == profile_str: # List system profiles.
    print("PROFILE")
    list_profiles()
    exit()
  elif noun == stage_str: # Listing user-defined stages.
    print ("STAGE")
    list_stages()
    exit()
  else: # Error message
    print_usage_ls() 
    exit()
elif verb == set_str: # Handle setting stuff...
  print('SET')
  if noun == profile_str: # Set the profile.
    print("Setting profile")
    set_profile(target)
    exit()
  elif noun == stage_str: # Set the stage.
    print("Setting stage")
    set_stage(target)
    exit()
  else: # Error message
    print_usage_set()
    exit()
else: # Error message
  print_usage()
  exit()
