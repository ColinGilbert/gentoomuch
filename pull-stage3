#!/usr/bin/env python3

import sys, os

if len(sys.argv) >= 3:
    arch = sys.argv[1].strip()
    tag = sys.argv[2].strip()
else:
    sys.exit('Usage: pull-stage3 <arch: amd64 | arm64 | armv5tel | armv6j_hardfp | ppc64le | s390 | x86 > <tag: latest | hardened | hardened-nomultilib | musl-hardened | musl-vanilla | nomultilib | systemd | uclibc-hardened | uclibc-vanilla >')

print('Attempting to pull stage "' + '" wih tag "'  + tag + '"')


tags_to_arches = {
    "latest": "amd64", "arm64", "armv5tel", "armv6j_hardfp", "armv7a_hardfp". "ppc64le", "s390x" , "x86"
    "hardened": "amd64", "x86"
    "hardened-nomultilib": "amd64"
    "musl-hardened": "amd64"
    "musl-vanilla": "amd64", "x86"
    "nomultilib": "amd64"
    "systemd": "amd64", "arm64", "x86"
    "uclibc-hardened": "amd64", "x86"
    "uclibc-vanilla": "amd64", "x86"
    }

arches_to_tag = { v: k for k, v in tags_to_arches.items() }
infile = open('include/docker/zentoo-stage3/Dockerfile.in')
lines = infile.readlines()
header = lines[0].strip() + arch + '-' + tag
lines[0] = header
infile.close()

outfile = open('work/zentoo-stage3/Dockerfile', 'w')
outfile.writelines(lines)
outfile.close()

code = os.system('docker image rm localhost:5000/zentoo-stage3:latest & cd work/zentoo-stage3 && docker build -t localhost:5000/zentoo-stage3 .')

if code != 0:
    sys.exit(code)
